name: Galho Seco CI

on:
    push:
        branches:
            - '**'
        tags:
            - 'v*' 
    pull_request:
        branches:
            - main
            - develop  

jobs:
    continuous-integration:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setting up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: 20.x
                cache: 'npm'

            - name: run install and tests
              run: |
                npm ci
                npm test -- --coverage
              env:
                CI: false
            - name: Save source code as artifact
              if: github.base_ref == 'main' || github.base_ref == 'develop' || startsWith(github.ref, 'refs/tags/v')
              uses: actions/upload-artifact@v4
              with:
                name: source-code-${{ github.sha }}
                path: .
                retention-days: 1

    build-docker-image:
        runs-on: ubuntu-latest
        needs: continuous-integration
        if: github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'develop')

        steps:
            - name: Download source code artifact
              uses: actions/download-artifact@v4
              with:
                name: source-code-${{ github.sha }}
                path: .

            - name: Create .env file
              run: |
                echo "${{ secrets.ENV_FILE }}"  > .env

            - name: Build Docker image for the default platform
              run: |
                docker build \
                  --secret id=env,src=.env \
                  -t galho-seco-api:${GITHUB_SHA} \
                  -t galho-seco-api:latest .
    
    build-multiplataform-image-and-push:
        runs-on: ubuntu-latest
        needs: build-docker-image
        if: startsWith(github.ref, 'refs/tags/v')
        
        steps:
            - name: Download source code artifact
              uses: actions/download-artifact@v4
              with:
                name: source-code-${{ github.sha }}
                path: .
            
            - name: Create .env file
              run: |
                echo "${{ secrets.ENV_FILE }}" > .env

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2
      
            - name: Build and push Docker image for multiple architectures
              run: |
                docker buildx build \
                  --platform linux/amd64,linux/arm64 \
                  --secret id=env,src=.env \
                  -t igoramaral/galho-seco-api:${GITHUB_SHA} \
                  -t igoramaral/galho-seco-api:latest \
                  --push .
